

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
###################

# Oracle DB
server.port=8181

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=psr123
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.show-sql=true
##spring.jpa.hibernate.ddl-auto = create
##spring.jpa.hibernate.ddl-auto = create-drop

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#############
####postgresql Database
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/bookdetails
#spring.datasource.username=postgres
#spring.datasource.password=admin
#spring.jpa.database=org.hibernate.dialect.PostgreSQL94Dialect
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create
#############

